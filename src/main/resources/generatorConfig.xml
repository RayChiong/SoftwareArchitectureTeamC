<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE generatorConfiguration   
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"   
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">  
  
<generatorConfiguration>  
    	<classPathEntry location="C:\Users\gc\.m2\repository\mysql\mysql-connector-java\5.1.30\mysql-connector-java-5.1.30.jar" />  
     <!-- targetRuntime：代码生成目标，默认是MyBatis3，可以是Ibatis2Java2或者Ibatis2Java5。生成对象兼容MyBatis版本3.0和更高版本,和JSE 5.0和更高版本 -->
    <!-- defaultModelType：用来定义生成模型类型策略。
	1.conditional 默认策略，为每个表生成一个Model class；
	2.flat:将所有的表中生成一个Model class，即这个类将保存所有表中字段；
	3.hierarchical ：如果表有一个主键，该模型将生成一个主键类,另一个类,用于容纳任何BLOB列在表中,和另一个类,用于容纳其余的字段。这个是一个适当的继承类之间的关系 
	-->
    <context id="AreaTables" targetRuntime="MyBatis3">  
    <property name="beginningDelimiter" value="`"/>
    <property name="endingDelimiter" value="`"/>
    <property name="autoDelimitKeywords" value="true"/>
  		<commentGenerator>  
            <property name="suppressDate" value="true" />  
      <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
      <property name="suppressAllComments" value="true"/>
        </commentGenerator>  
	<!-- 数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"  
            connectionURL="jdbc:mysql://127.0.0.1/test" userId="test" password="xuyuanming">  
        </jdbcConnection>  
  
        <javaTypeResolver>  
	<!-- 只有一个属于forceBigDecimals，默认false。如果字段精确超过0，生成BigDecimal 如果字段精确是0，总长度10-18生成Long; 如果字段精确是0，总长5-9生成Integer; 如果字段精确是0，总长小于5生成Short; 如果forceBigDecimals为true,统一生成BigDecimal -->
            <property name="forceBigDecimals" value="false" />  
        </javaTypeResolver>  
  
	<!-- Model生成配置 targetPackage：生成包路径，自动生成目录。targetProject：项目路经，可以绝对路径或者相对路径。 -->
        <javaModelGenerator targetPackage="cn.edu.pku.ss.sa.teamc.dao.model" targetProject="src/main/java">  
            <property name="enableSubPackages" value="true" />  
            <property name="trimStrings" value="true" />  
        </javaModelGenerator>  
  
	<!-- sqlMap配置 -->
        <sqlMapGenerator targetPackage="cn.edu.pku.ss.sa.teamc.dao.xml" targetProject="src/main/java">  
            <property name="enableSubPackages" value="true" />  
        </sqlMapGenerator>  
	
  	<!-- DAO接口的生成 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="cn.edu.pku.ss.sa.teamc.dao.sqlmapper" targetProject="src/main/java">  
            <property name="enableSubPackages" value="true" />
            
        </javaClientGenerator>  
	
	<!-- tableName:用于自动生成代码的数据库表；domainObjectName:对应于数据库表的javaBean类名，如果未指定自动基于表名生成 -->
        <!-- table其他属性：enableCountByExample="false"；enableUpdateByExample="false"；enableDeleteByExample="false"；enableSelectByExample="false"；selectByExampleQueryId="false"；schema即为数据库名, tableName为对应的数据库表, domainObjectName是要生成的实体类 -->	
	<!--
		忽略字段
        <ignoreColumn column="columnName" />
		
		无论字段是什么类型，生成的类属性都是varchar 
		<columnOverride column="columnName" jdbcType="VARCHAR" />

		修改数据库列名映射的javabean属性名
		<columnOverride column="oldColumnName" property="propertyName" />

		主键生成 如果用了这个 generatedKey ,MBG将在sqlmpper.xml里生成一个 selectKey元素在用在<insert>元素里 。
		<generatedKey column="columnName" sqlStatement="JDBC" identity="true" />
        <generatedKey column="ID" sqlStatement="MySql" identity="true" />
		
		javabean继承的父类
		<property name="rootClass" value="com.xxx.commons.entity.IdEntity"/>

		<property name="useActualColumnNames" value="true"/>
	-->
    <!-- 
    
    <table tableName="t_shop_stock" domainObjectName="TShopStock">
			<generatedKey column="ID" sqlStatement="MySql" identity="true" />
	</table>
	-->
	<table tableName="t_user" domainObjectName="TUser">
		<generatedKey column="ID" sqlStatement="MySql" identity="true" />
	</table>
	<table tableName="t_customer" domainObjectName="TCustomer">
		<generatedKey column="ID" sqlStatement="MySql" identity="true" />
	</table>
	<table tableName="t_goods" domainObjectName="TGoods">
		<generatedKey column="ID" sqlStatement="MySql" identity="true" />
	</table>
	<table tableName="t_goods_sale" domainObjectName="TGoodsSale">
		<generatedKey column="ID" sqlStatement="MySql" identity="true" />
	</table>
	<table tableName="t_goods_type" domainObjectName="TGoodsType">
		<generatedKey column="ID" sqlStatement="MySql" identity="true" />
	</table>
  </context>
</generatorConfiguration>
